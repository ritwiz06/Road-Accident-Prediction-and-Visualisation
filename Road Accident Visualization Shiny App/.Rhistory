train <- birthwt[train_samples,]
test <- birthwt[-train_samples,]
model1 <- lm(bwt ~ ., data = birthwt)
model1
summary(model1)
sigma(model1)*100/mean(birthwt$bwt)
pred1 <- model1 %>%
predict(test)
pred1
RMSE1 <- RMSE(pred1,test$bwt)
RMSE1
model2 <- lm(bwt ~ low+race+ui+smoke, data = birthwt)
model2
summary(model2)
sigma(model2)*100/mean(birthwt$bwt)
pred2 <- model2 %>%
predict(test)
pred2
RMSE2 <- RMSE(pred2,test$bwt)
RMSE2
model3 <- lm(bwt ~ low+ui, data = birthwt)
model3
summary(model3)
sigma(model3)*100/mean(birthwt$bwt)
pred3 <- model3 %>%
predict(test)
pred3
RMSE3 <- RMSE(pred3,test$bwt)
RMSE3
shiny::runApp('D:/SEM5/DATA Visualisation/project/plots data')
install.packages("rsconnect")
nba <- read.csv("D:/SEM5/Foundation of data analytics/lab/lab11/nba.csv")
View(nba)
str(nba)
nba <- read.csv("D:/SEM5/Foundation of data analytics/lab/lab11/nba.csv")
View(nba)
str(nba)
library(tidyverse)
library(caret)
library(ggplot2)
nba <- read.csv("D:/SEM5/Foundation of data analytics/lab/lab11/nba.csv")
View(nba)
str(nba)
#library(tidyverse)
#library(caret)
#library(ggplot2)
champs <- read_csv(file = "D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv(file = "D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
champs %>%
select(Team) %>%
distinct()
champs <- read_csv(file = "D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv(file = "D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
champs %>%
select(Team) %>%
distinct()
champs <- read_csv(file = "D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv(file = "D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
#library(tidyverse)
#library(caret)
#library(ggplot2)
champs <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv("D:/SEM5/Foundation of dataanalytics/lab/lab11/runnerupsdata.csv")
#library(tidyverse)
#library(caret)
#library(ggplot2)
champs <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
champs %>%
select(Team) %>%
distinct()
#library(tidyverse)
#library(caret)
#library(ggplot2)
champs <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
str(champs)
champs %>%
select(Team) %>%
distinct()
#library(tidyverse)
#library(caret)
#library(ggplot2)
champs <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read_csv("D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
str(champs)
champs <- champs %>%
mutate(Team = ifelse(Team == "Warriorrs","Warriors",Team)) %>%
mutate(Team = ifelse(Team == "'Heat'","Heat",Team)) %>%
mutate(Win = as.factor(Win)) %>%
mutate(Home = as.factor(Home)) %>%
mutate(X = as.numeric(X))
runners <- runners %>%
mutate(Win = as.factor(Win)) %>%
mutate(Home = as.factor(Home)) %>%
rename(X = Y)
fullPostSeasons <- bind_rows(champs,runners) %>%
mutate(id = 1:(nrow(champs)*2))
fullPostSeasons <- bind_rows(champs,runners) %>%
mutate(id = 1:(nrow(champs)*2))
head(fullPostSeasons)
champs %>%
select(Team) %>%
distinct()
fullPostSeasons %>%
select(Team) %>%
distinct()
ggplot(data = champs, aes(x = Year, y = PTS, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
theme_dark() +
scale_color_brewer(palette = "Paired") +
theme(axis.text.x = element_text(size = 3, angle = 45),axis.text.y = element_text(size = 6, angle = 45)) +
facet_wrap(~ Home, labeller = "label_both") +
ylab("Points Scored")
ggplot(data = champs, aes(x = Year, y = PTS, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
theme(axis.text.x = element_text(size = 3, angle = 45),axis.text.y = element_text(size = 6, angle = 45)) +
facet_wrap(~ Home, labeller = "label_both") +
ylab("Points Scored")
ggplot(data = champs, aes(x = Year, y = PTS, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
theme(axis.text.x = element_text(size = 3, angle = 45),axis.text.y = element_text(size = 6, angle = 45)) +
ylab("Points Scored")
ggplot(data = champs,
aes(x = Year, y = FGP, color = Team, shape = Win)) +
geom_hline(yintercept = 0.50, size = 0.25, color = "gray95") +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
ylab("Field Goal Percentage")
ggplot(data = champs,
aes(x = Year, y = FGP, color = Team, shape = Win)) +
geom_hline(yintercept = 0.50, size = 0.25, color = "gray95") +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
theme(axis.text.x = element_text(size = 3, angle = 45),
axis.text.y = element_text(size = 6, angle = 45)) +
ylab("Field Goal Percentage")
ggplot(data = champs,
aes(x = Year, y = TPP, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
theme_dark() +
scale_color_brewer(palette = "Paired") +
theme(axis.text.x = element_text(size = 3, angle = 45),
axis.text.y = element_text(size = 6, angle = 45)) +
facet_wrap(~ Home, labeller = "label_both") +
ylab("Three Point Percentage")
ggplot(data = champs,
aes(x = Year, y = TPP, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
scale_color_brewer(palette = "Paired") +
theme(axis.text.x = element_text(size = 3, angle = 45),
axis.text.y = element_text(size = 6, angle = 45)) +
ylab("Three Point Percentage")
ggplot(data = champs,
aes(x = Year, y = TPP, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
theme(axis.text.x = element_text(size = 3, angle = 45),
axis.text.y = element_text(size = 6, angle = 45)) +
ylab("Three Point Percentage")
ggplot(data = champs,
aes(x = Year, y = FTP, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
theme_dark() +
theme(axis.text.x = element_text(size = 3, angle = 45),
axis.text.y = element_text(size = 6, angle = 45)) +
ylab("Free Throw Percentage")
ggplot(data = champs,
aes(x = Year, y = FTP, color = Team, shape = Win)) +
geom_point(size = 1) +
scale_x_continuous(breaks = 1980:2017) +
scale_y_continuous(breaks = seq(0,1,by = 0.05), limits = c(0,1)) +
theme(axis.text.x = element_text(size = 3, angle = 45),
axis.text.y = element_text(size = 6, angle = 45)) +
ylab("Free Throw Percentage")
ggplot(data = fullPostSeasons,
aes(x = Home, y = PTS, fill = Win)) +
geom_violin() +
theme_dark() +
scale_fill_brewer(palette = "Paired") +
ylab("Points Scored")
ggplot(data = fullPostSeasons,
aes(x = Home, y = PTS, fill = Win)) +
geom_boxplot() +
scale_fill_brewer(palette = "Paired") +
ylab("Points Scored")
ggplot(data = fullPostSeasons,
aes(x = Year, y = PTS, fill = Win)) +
geom_boxplot() +
scale_fill_brewer(palette = "Paired") +
ylab("Points Scored")
ggplot(data = fullPostSeasons,
aes(x = Home, y = PTS, fill = Win)) +
geom_boxplot() +
scale_fill_brewer(palette = "Paired") +
ylab("Points Scored")
fullPostSeasons%>%
group_by(Team)
fullPostSeasons%>%
group_by(Team)%>%
summarize(count=n())
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Team)%>%
summarize(count=n())
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Team)%>%
summarize(count=n())%>%
arrange()
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Team)%>%
summarize(count=n())%>%
arrange(count)
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Team)%>%
summarize(count=n())%>%
arrange(desc(count))
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Team)%>%
group_by((Year))%>%
summarize(count=n())%>%
arrange(desc(count))
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Team, Year)%>%
summarize(count=n())%>%
arrange(desc(count))
fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year)%>%
group_by(Team)%>%
summarize(count=n())%>%
arrange(desc(count))
df1 <- fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year)%>%
df1 <- fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year)
df1 <- fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year)
df1
df1 <- fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1
df1 <- fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1
df1%>%
group_by(Team)%>%
summarize(count= n())
df1 <- champs%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1
df1%>%
group_by(Team)%>%
summarize(count= n())
df1 <- champs%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- champs%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- runners%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- fullPostSeasons%>%
filter(Win==1)%>%
group_by(Year, Team)%>%
summarize(count=n())
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- champs%>%
group_by(Year, Team)%>%
summarize(count=n())
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- runners%>%
group_by(Year, Team)%>%
summarize(count=n())
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- fullPostSeasons%>%
group_by(Year, Team)%>%
summarize(count=n())
df1%>%
group_by(Team)%>%
summarize(count= n())%>%
arrange(desc(count))
df1 <- fullPostSeasons%>%
filter(Win==0)
group_by(Year, Team)%>%
summarize(count=n())
df1 <- champs%>%
group_by(Year)%>%
filter(Win==1)
summarize(count=n())
df1 <- champs%>%
group_by(Year)%>%
filter(Win==1)
df1
df1 <- champs%>%
group_by(Year)%>%
filter(Win==0)
df1
set.seed(123)
train_samples <- champs$PTS %>%
createDataPartition(p=0.8,list=FALSE)
train <- champs[train_samples,]
test <- champs[-train_samples,]
model1 <- lm(PTS ~ ., data = champs)
model1
summary(model1)
set.seed(123)
train_samples <- champs$PTS %>%
createDataPartition(p=0.8,list=FALSE)
train <- champs[train_samples,]
test <- champs[-train_samples,]
model1 <- lm(PTS ~ ., data = champs)
model1
summary(model1)
set.seed(123)
train_samples <- champs$PTS %>%
createDataPartition(p=0.8,list=FALSE)
train <- champs[train_samples,]
test <- champs[-train_samples,]
model1 <- lm(PTS ~ ., data = champs)
model1
summary(model1)
sigma(model1)*100/mean(champs$PTS)
model2 <- lm(PTS ~ FGA+ TP+TPA+TPP+FT, data = champs)
model2
summary(model1)
model2 <- lm(PTS ~ FGA+ TP+TPA+TPP+FT, data = champs)
model2
summary(model2)
model2 <- lm(PTS ~ FGA+ TP+TPA+FT, data = champs)
model2
summary(model2)
model2 <- lm(PTS ~ FGA+ TP+TPA+FT, data = champs)
model2
summary(model2)
sigma(model1)*100/mean(champs$PTS)
pred2 <- model2 %>%
predict(test)
pred2
RMSE2 <- RMSE(pred2,test$PTS)
RMSE2
model2 <- lm(PTS ~ FGA+ TP+TPA+FT, data = champs)
model2
summary(model2)
sigma(model2)*100/mean(champs$PTS)
pred2 <- model2 %>%
predict(test)
pred2
RMSE2 <- RMSE(pred2,test$PTS)
RMSE2
model2 <- lm(PTS ~ FGA+ TP+TPA+FT, data = champs)
model2
summary(model2)
sigma(model2)*100/mean(champs$PTS)
pred2 <- model2 %>%
predict(test)
pred2
RMSE2 <- RMSE(pred2,test$PTS)
RMSE2
summary(champs$PTS)
summary(champs$PTS)
summary(champs$PTS)
library(dplyr)
library(tidyverse)
library(caret)
library(ggplot2)
champs <- read.csv("D:/SEM5/Foundation of data analytics/lab/lab11/championsdata.csv")
runners <- read.csv("D:/SEM5/Foundation of data analytics/lab/lab11/runnerupsdata.csv")
str(champs)
model2 <- lm(PTS ~ FGA+ TP+TPP+FT, data = champs)
model2
summary(model2)
sigma(model2)*100/mean(champs$PTS)
pred2 <- model2 %>%
predict(test)
pred2
RMSE2 <- RMSE(pred2,test$PTS)
RMSE2
library(ggplot2)
library(readr)
water_qual<-read.csv("D:\SEM5\Foundation of data analytics\lab\lab12\WaterQuality.csv",header=T,stringsAsFactor=FALSE)
water_qual<-read.csv("D://SEM5//Foundation of data analytics//lab//lab12//WaterQuality.csv",header=T,stringsAsFactor=FALSE)
str(water_qual)
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
head(water_qual)
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
slice_sample(water_qual)
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
sample(water_qual)
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
sample(water_qual,5)
View(water_qual)
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
head(water_qual)
water_qual$year<-format(as.Date(water_qual$year, format="%d/%m/%Y"),"%Y")
water_qual$year<-format(as.Date(water_qual$year, format="%d/%m/%Y"),"%Y")
water_qual$year
View(water_qual)
ggplot(water_qual,aes(x=quality))+geom_bar(fill="chartreuse")
ggplot(water_qual,aes(x=quality))+geom_bar(fill="red")
ggplot(water_qual,aes(x=year,y=quality,fill=factor(state)))+geom_bar(stat="identity")+theme(legend.position="bottom")
ggplot(water_qual,aes(x=year,y=quality,fill=factor(state)))+geom_bar(stat="identity")+theme(legend.position="bottom")
water_qual<-read.csv("D://SEM5//Foundation of data analytics//lab//lab12//WaterQuality.csv",header=T,stringsAsFactor=FALSE)
str(water_qual)
cnames<-c("state","district","block","panchayat","village","habitation","quality","year")
colnames(water_qual)<-cnames
head(water_qual)
library(ggplot2)
library(dplyr)
water_qual$year<-format(as.Date(water_qual$year, format="%d/%m/%Y"),"%Y")
head(water_qual$year)
ggplot(water_qual,aes(x=quality))+geom_bar(fill="red")
ggplot(water_qual,aes(x=year,y=quality,fill=factor(state)))+geom_bar(stat="identity")+theme(legend.position="bottom")
tn_wq_data<-water_qual %>% filter(state =="TAMIL NADU")
par(mfrow=c(1,2))
ggplot(tn_wq_data,aes(x=quality,fill=year))+geom_bar(position="dodge")+
theme(axis.text.x = element_text(angle = 90))+scale_fill_brewer(palette="Spectral")
sta_qual<-data.frame(table(water_qual$state,water_qual$quality,water_qual$year))
sta_qual<-sta_qual %>% arrange(desc(Freq))
p <- ggplot(data = sta_qual, aes(x = Var1, y = Freq, group = Var2, fill = Var2)) + geom_bar(stat = "identity", width = 0.5, position = "dodge")+ theme_bw()+ theme(axis.text.x = element_text(angle = 90))+ xlab("States")+ylab("Count")+ggtitle("State wise water Quality Proportion")+scale_fill_brewer(palette="Set1")
p
head(sta_qual)
sta_qual%>% ggplot(aes(x = Var3, y = Freq,fill=Var2))+geom_bar(stat="identity")+theme(axis.text.x=element_text(angle=90,hjust=0.5))+facet_wrap(~ Var1)+labs(title="Water Degradation in Indian States",x="Year",y="Freq")
source("~/.active-rstudio-document", echo=TRUE)
affected<-data.frame(table(water_qual$state,water_qual$quality,water_qual$year,water_qual$district))
affected<-data.frame(table(water_qual$state,water_qual$quality,water_qual$year,water_qual$district))
affected_fil<-affected %>%  filter(Var2=="Salinity" & Var1=="RAJASTHAN" & Freq>50)%>%arrange(desc(Freq))
head(affected_fil)
affected<-data.frame(table(water_qual$state,water_qual$quality,water_qual$year,water_qual$district))
affected_fil<-affected %>%  filter(Var2=="Salinity" & Freq>50)%>%arrange(desc(Freq))
head(affected_fil)
ggplot(affected_fil,aes(x=Var4,y=Freq,fill=Var3))+geom_bar(stat="identity",position="dodge")+coord_flip()+scale_fill_brewer(palette="PuRd")+labs(title="Districts in Rajasthan which are Salinity Affected")
ggplot(affected_fil,aes(x=Var4,y=Freq,fill=Var3))+geom_bar(stat="identity",position="dodge")+coord_flip()+scale_fill_brewer(palette="PuRd")+labs(title="Districts in Rajasthan which are Salinity Affected")
rankq<-sta_qual %>%
group_by(Var2) %>%
mutate(rank = rank(-Freq, ties.method = "first"))
head(rankq)
rankq %>% group_by(Var2)%>% filter(rank <15)%>% ggplot( aes(x = Var1,
y = rank,color=Var3)) + geom_point(size=3,alpha=0.7) +facet_wrap(~Var2)+theme(axis.text.x=element_text(angle=90,hjust=0.5))+scale_color_manual(values=c("red","purple","blue","green"))+labs(title="Top 15 water Degradation states",x="State",y="Rank")
setwd("D:\\SEM5\\Foundation of data analytics\\J comp\\GitHub\\Road-Accident-Prediction-and-Visualisation\\Road Accident Visualization Shiny App")
road <- read.csv(file = "data/injured1.csv")
df <- road
df$name_of_city<-df$states
road <- read.csv(file = "data/injured1.csv")
df <- road
df$name_of_city<-df$states
df$name_of_city<-df$state_name
road <- read.csv(file = "data/injured1.csv")
df <- road
df$name_of_city<-df$states
df$name_of_city<-df$state_name
shiny::runApp()
runApp()
